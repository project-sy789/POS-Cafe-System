import express from 'express';
import User from '../models/User.js';
import Category from '../models/Category.js';
import Product from '../models/Product.js';
import Settings from '../models/Settings.js';
import ProductOption from '../models/ProductOption.js';

const router = express.Router();

// Seed endpoint - only for initial setup
router.post('/initialize', async (req, res) => {
  try {
    // Check if already initialized
    const existingUsers = await User.countDocuments();
    if (existingUsers > 0) {
      return res.status(400).json({ 
        message: 'Database already initialized',
        users: existingUsers 
      });
    }

    // Create admin user
    const admin = await User.create({
      username: 'admin',
      password: 'admin123',
      role: 'Manager'
    });

    // Create cashier user
    const cashier = await User.create({
      username: 'cashier1',
      password: 'cashier123',
      role: 'Cashier'
    });

    // Create categories
    const categories = await Category.insertMany([
      { name: '‡∏Å‡∏≤‡πÅ‡∏ü', icon: '‚òï', order: 1 },
      { name: '‡∏ä‡∏≤', icon: 'üçµ', order: 2 },
      { name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏õ‡∏±‡πà‡∏ô', icon: 'ü•§', order: 3 },
      { name: '‡πÄ‡∏ö‡πÄ‡∏Å‡∏≠‡∏£‡∏µ‡πà', icon: 'ü•ê', order: 4 },
      { name: '‡∏Ç‡∏ô‡∏°', icon: 'üç∞', order: 5 }
    ]);

    // Create default settings
    await Settings.create({
      storeName: 'Caf√© POS',
      storeAddress: '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
      storePhone: '02-123-4567',
      taxRate: 7,
      taxType: 'add',
      promptPayId: '0812345678',
      theme: 'default',
      featuredCategory: {
        enabled: true,
        mode: 'all',
        label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        icon: '‚≠ê'
      }
    });

    // Create sample products
    const coffeeCategory = categories.find(c => c.name === '‡∏Å‡∏≤‡πÅ‡∏ü');
    await Product.insertMany([
      {
        name: 'Americano',
        price: 45,
        category: coffeeCategory._id,
        imageUrl: '',
        description: '‡∏Å‡∏≤‡πÅ‡∏ü‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤‡πÇ‡∏ô‡πà',
        available: true
      },
      {
        name: 'Cappuccino',
        price: 55,
        category: coffeeCategory._id,
        imageUrl: '',
        description: '‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏≤‡∏õ‡∏π‡∏ä‡∏¥‡πÇ‡∏ô‡πà',
        available: true
      },
      {
        name: 'Latte',
        price: 55,
        category: coffeeCategory._id,
        imageUrl: '',
        description: '‡∏Å‡∏≤‡πÅ‡∏ü‡∏•‡∏≤‡πÄ‡∏ï‡πâ',
        available: true
      }
    ]);

    // Create product options
    await ProductOption.insertMany([
      {
        name: '‡∏Ç‡∏ô‡∏≤‡∏î',
        type: 'single',
        required: true,
        values: [
          { name: '‡πÄ‡∏•‡πá‡∏Å', priceModifier: 0 },
          { name: '‡∏Å‡∏•‡∏≤‡∏á', priceModifier: 10 },
          { name: '‡πÉ‡∏´‡∏ç‡πà', priceModifier: 20 }
        ]
      },
      {
        name: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏ô',
        type: 'single',
        required: false,
        values: [
          { name: '‡πÑ‡∏°‡πà‡∏´‡∏ß‡∏≤‡∏ô', priceModifier: 0 },
          { name: '‡∏´‡∏ß‡∏≤‡∏ô‡∏ô‡πâ‡∏≠‡∏¢', priceModifier: 0 },
          { name: '‡∏´‡∏ß‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥', priceModifier: 0 },
          { name: '‡∏´‡∏ß‡∏≤‡∏ô‡∏°‡∏≤‡∏Å', priceModifier: 0 }
        ]
      }
    ]);

    res.json({
      success: true,
      message: 'Database initialized successfully',
      data: {
        users: 2,
        categories: categories.length,
        products: 3,
        settings: 1,
        productOptions: 2
      }
    });

  } catch (error) {
    console.error('Seed error:', error);
    res.status(500).json({ 
      error: 'Failed to initialize database',
      message: error.message 
    });
  }
});

export default router;
